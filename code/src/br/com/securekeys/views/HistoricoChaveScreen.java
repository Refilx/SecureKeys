/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.securekeys.views;

import br.com.securekeys.DAO.ChaveDAO;
import br.com.securekeys.DAO.HistoricoDAO;
import br.com.securekeys.model.Historico;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Adimael
 */
public class HistoricoChaveScreen extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddUserScreen
     */
    public HistoricoChaveScreen() {
        initComponents();
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, null, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 70, 214)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jPanel2 = new JPanel( new BorderLayout());
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        mesesList = new JComboBox<>();

        setClosable(true);
        setMinimumSize(new Dimension(1795, 701));
        setPreferredSize(new Dimension(1795, 201));

        jPanel1.setBackground(new Color(255, 255, 255));

        jLabel1.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("Cadastrar nova Chave");

        jPanel2.setBackground(new Color(255, 255, 255));

        /**
         * Foi necessesário intanciar a lista de histórico do banco de dados antes da tabela
         * para poder definir o tamanho da tabela de arordo com a quantidade de registros
         */
        HistoricoDAO historicoDAO = new HistoricoDAO();

        final Historico[] historicos = historicoDAO.getHistorico().toArray(new Historico[0]);

        mesesList.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        mesesList.setModel(new DefaultComboBoxModel<>(historicoDAO.getMeses().toArray(new String[0])));

        //Botão para exportar os dados da tabela
        JButton btnFiltro = new JButton();

        //Tentar adicionar um botão para Exportar os dados
        btnFiltro.setText("Filtro");
        btnFiltro.setBorder(null);
        btnFiltro.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFiltroMouseClicked(evt);
            }
        });

        TableConfigurator tableConfigurator = new TableConfigurator();

        jTable1 = tableConfigurator.tableConfig(jTable1, historicos, jScrollPane1);

        //Botão para exportar os dados da tabela
        JButton btnExport = new JButton();

        //Tentar adicionar um botão para Exportar os dados
        btnExport.setText("Export to Excel");
        btnExport.setBorder(null);
        btnExport.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnExport.setIcon( new ImageIcon(getClass().getClassLoader().getResource("br/com/securekeys/icons/excel.png")));
        btnExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportMouseClicked(evt);
            }
        });

        //Setando os valores de cada coluna
        jTable1 = tableConfigurator.refresh(jTable1, historicos, jScrollPane1);

//        TableButtons tableButtons = new TableButtons();

        // Botões de atualizar a dataFechamento
        jTable1.getColumnModel().getColumn(7).setCellRenderer(new TableButtons.ButtonRenderer());
        jTable1.getColumnModel().getColumn(7).setCellEditor(new TableButtons.ButtonEditor(new JCheckBox(), jTable1, jScrollPane1));

        // Botões de exluir o registro
        jTable1.getColumnModel().getColumn(8).setCellRenderer(new TableButtons.ButtonRenderer());
        jTable1.getColumnModel().getColumn(8).setCellEditor(new TableButtons.ButtonEditor(new JCheckBox(), jTable1, jScrollPane1));


        // Pode-se fazer um botão que passe páginas e carregue dados diferentes na table OU Pode-se apenas filtrar o período(mês) e carregar os dados do período(mês)

        // Para fazer os botões de passar as páginas precisa de:
        // um FOR que vai atualizar os dados,
        // de uma variável para armazenar o limite inferior (limite da página anterior),
        // de uma variável para armazenar o limite superior (limite da página presente),
        // logica para incrementar o contador, caso avance a página e decrementar o contador, caso volte a página
        // de uma variável que esteja sempre sendo atualizada quanto aos id que serão setados na table,

        // Se for adicionar um jComboBox como filtro (de períodos ou intervalo de meses que o registro será puxado do banco, exibir o mês filtrado)
        // pega-se o períiodo do jComboBox e chama um método que será criado para puxar os dados do período selecionado,
        // armazena os dados do período selecionado e passa para a table com um FOR


        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
                                .addContainerGap()
                        )
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addGap(16, 16, 16)
                        )
        );

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExport, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1450)
                                .addComponent(mesesList, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                        )
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1360)
                                .addComponent(btnFiltro, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                        )

        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnExport, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mesesList, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnFiltro, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>


    private void btnFiltroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoricoChavesMouseClicked
        // TODO add your handling code here:

       Historico[] historicoList = new HistoricoChave().filter(mesesList.getSelectedItem()).toArray(new Historico[0]);

       JTable newTable = new JTable();

       TableConfigurator configurator = new TableConfigurator();

       newTable = configurator.tableConfig(newTable, historicoList, jScrollPane1);

       configurator.refresh(newTable, historicoList, jScrollPane1);
    }

    private void btnExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoricoChavesMouseClicked
        // TODO add your handling code here:

        // Caso o usuário clique no botão o sistema exportará os dados para uma planilha excel
        new JTableToExcel(jTable1);

    }

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox mesesList;
    // End of variables declaration
}
