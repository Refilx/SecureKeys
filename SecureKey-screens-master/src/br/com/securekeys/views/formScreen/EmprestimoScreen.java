package br.com.securekeys.views.formScreen;

import br.com.securekeys.DAO.ChaveDAO;
import br.com.securekeys.DAO.HistoricoDAO;
import br.com.securekeys.DAO.PessoaDAO;
import br.com.securekeys.model.Chave;
import br.com.securekeys.model.Historico;
import br.com.securekeys.model.Pessoa;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Adimael
 */
public class EmprestimoScreen extends javax.swing.JDialog {

    /**
     * Creates new form EmprestimoScreen
     */
    public EmprestimoScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btnEmprestar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnCancelar.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        placeHolderUser = new javax.swing.JLabel();
        placeHolderUser1 = new javax.swing.JLabel();
        placeHolderUser2 = new javax.swing.JLabel();
        jUserField = new javax.swing.JTextField();
        jKeyField = new javax.swing.JTextField();
        btnEmprestar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        SelectKey = new javax.swing.JScrollPane();
//        txtKey = new javax.swing.JLabel(); // Label que mostra as chaves filtradas
        SelectUser = new javax.swing.JScrollPane();
//        txtUser = new javax.swing.JLabel(); // Label que mostra os usuários filtrados
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOBS = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1139, 592));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        placeHolderUser.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        placeHolderUser.setForeground(new java.awt.Color(153, 153, 153));
        placeHolderUser.setText("Observação...");
        placeHolderUser.setEnabled(false);
        placeHolderUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                placeHolderUserKeyTyped(evt);
            }
        });
        jPanel1.add(placeHolderUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 510, 60));

        placeHolderUser1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        placeHolderUser1.setForeground(new java.awt.Color(153, 153, 153));
        placeHolderUser1.setText("Digite seu nome de usuário....");
        placeHolderUser1.setEnabled(false);
        placeHolderUser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                placeHolderUser1KeyTyped(evt);
            }
        });
        jPanel1.add(placeHolderUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 510, 60));

        placeHolderUser2.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        placeHolderUser2.setForeground(new java.awt.Color(153, 153, 153));
        placeHolderUser2.setText("Digite o número da chave....");
        placeHolderUser2.setEnabled(false);
        placeHolderUser2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                placeHolderUser2KeyTyped(evt);
            }
        });
        jPanel1.add(placeHolderUser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 510, 60));

        jUserField.setBackground(new java.awt.Color(204, 255, 204));
        jUserField.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jUserField.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jUserField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jUserField, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 53, 520, 60));

        jKeyField.setBackground(new java.awt.Color(204, 255, 204));
        jKeyField.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jKeyField.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jKeyField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        jPanel1.add(jKeyField, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 53, 520, 60));

        btnEmprestar.setBackground(new java.awt.Color(0, 102, 0));
        btnEmprestar.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        btnEmprestar.setForeground(new java.awt.Color(255, 255, 255));
        btnEmprestar.setText("Emprestar");
        btnEmprestar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEmprestar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEmprestarMouseClicked(evt);
            }
        });
        jPanel1.add(btnEmprestar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, 250, 60));

        btnCancelar.setBackground(new java.awt.Color(255, 51, 51));
        btnCancelar.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, 250, 60));

//        txtKey.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
//        txtKey.setText("124-Labóratorio de informática");

//        javax.swing.GroupLayout SelectUser1Layout = new javax.swing.GroupLayout(SelectKey);
//        SelectKey.setLayout(SelectUser1Layout);
//        SelectUser1Layout.setHorizontalGroup(
//            SelectUser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(SelectUser1Layout.createSequentialGroup()
//                .addContainerGap()
////                .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(62, Short.MAX_VALUE))
//        );
//        SelectUser1Layout.setVerticalGroup(
//            SelectUser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(SelectUser1Layout.createSequentialGroup()
//                .addContainerGap()
////                .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );


//        txtUser.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
//        txtUser.setText("Adimael.silva");

        PessoaDAO pessoaDAO = new PessoaDAO();
        ChaveDAO chaveDAO = new ChaveDAO();

        //Puxandos os dados do banco de dados e colocando em listas auxiliares
        pessoas = pessoaDAO.getPessoa();
        chaves = chaveDAO.getChave();

        //Listas de itens que serão exibidos
        List<String> nomePessoas = new ArrayList<>();
        List<String> numeroChave = new ArrayList<>();

        //Colocando os valores do banco de dados nas listas que serão exibidas
        for (int i=0; i < pessoas.size(); i++){
            nomePessoas.add(i, pessoas.get(i).getNome());
        }
        for (int i=0; i < chaves.size(); i++){
            numeroChave.add(i, chaves.get(i).getSala());
        }

        // Modelo de lista e JList
        listModelPessoa = new DefaultListModel<>();
        nomePessoas.forEach(listModelPessoa::addElement);
        JList<String> jListNomePessoa = new JList<>(listModelPessoa);
        SelectUser.add(jListNomePessoa);

        // Modelo de lista e JList
        listModelChave = new DefaultListModel<>();
        numeroChave.forEach(listModelChave::addElement);
        JList<String> jListNumeroChave = new JList<>(listModelChave);
        SelectKey.add(jListNumeroChave);

        // Adiciona DocumentListener ao campo de entrada do nome da pessoa
        jUserField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterList();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterList();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterList();
            }

            private void filterList() {
                String query = jUserField.getText().toLowerCase();
                listModelPessoa.clear();
                nomePessoas.stream()
                        .filter(item -> item.toLowerCase().contains(query))
                        .forEach(listModelPessoa::addElement);
            }
        });

        // Adiciona DocumentListener ao campo de entrada da Chave
        jKeyField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterList();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterList();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterList();
            }

            private void filterList() {
                String query = jKeyField.getText().toLowerCase();
                listModelChave.clear();
                numeroChave.stream()
                        .filter(item -> item.toLowerCase().contains(query))
                        .forEach(listModelChave::addElement);
            }
        });

        // Adiciona ListSelectionListener à JList
        jListNomePessoa.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedValue = jListNomePessoa.getSelectedValue();
                    if (selectedValue != null) {
                        jUserField.setText(selectedValue);
                    }
                }
            }
        });

        // Adiciona ListSelectionListener à JList
        jListNumeroChave.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedValue = jListNumeroChave.getSelectedValue();
                    if (selectedValue != null) {
                        jKeyField.setText(selectedValue);
                    }
                }
            }
        });

//        javax.swing.GroupLayout SelectUserLayout = new javax.swing.GroupLayout(SelectUser);
//        SelectUser.setLayout(SelectUserLayout);
//        SelectUserLayout.setHorizontalGroup(
//            SelectUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(SelectUserLayout.createSequentialGroup()
//                .addContainerGap()
////                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(291, Short.MAX_VALUE))
//        );
//        SelectUserLayout.setVerticalGroup(
//            SelectUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(SelectUserLayout.createSequentialGroup()
//                .addContainerGap()
////                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );

        SelectUser.setViewportView(new JScrollPane(jListNomePessoa));
        SelectKey.setViewportView(new JScrollPane(jListNumeroChave));

        jPanel1.add(SelectKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, 520, 0));
        jPanel1.add(SelectUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 520, 0));

        jTextAreaOBS.setBackground(new java.awt.Color(204, 255, 204));
        jTextAreaOBS.setColumns(20);
        jTextAreaOBS.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jTextAreaOBS.setRows(5);
        jTextAreaOBS.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setViewportView(jTextAreaOBS);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 1060, 140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEmprestarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMouseClicked

        if(!jUserField.getText().isEmpty() && !jKeyField.getText().isEmpty() && !jTextAreaOBS.getText().isEmpty()) {
            ChaveDAO chaveDAO = new ChaveDAO();

            Historico historico = new Historico();

            for (int i = 0; i < pessoas.size(); i++) {

                if (pessoas.get(i).getNome().equals(jUserField.getText())) {
                    historico.setIdPessoa(pessoas.get(i).getIdPessoa());
                }

            }
            for (int i = 0; i < chaves.size(); i++) {

                if (chaves.get(i).getSala().equals(jKeyField.getText())) {
                    historico.setIdChave(chaves.get(i).getIdChave());
                }
            }

            historico.setObservacoes(jTextAreaOBS.getText());
            historico.setStatus("EM ABERTO");
            historico.setDataAbertura(new Date());

            chaveDAO.emprestarChave(historico);

            finalizado = true;

            jUserField.setText(null);
            jKeyField.setText(null);
            jTextAreaOBS.setText(null);
        }
        else {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos por favor", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCadastrarMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void placeHolderUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placeHolderUserKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_placeHolderUserKeyTyped

    private void placeHolderUser1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placeHolderUser1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_placeHolderUser1KeyTyped

    private void placeHolderUser2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placeHolderUser2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_placeHolderUser2KeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        if(jUserField.getText().isEmpty()) {
            placeHolderUser1.setVisible(true);
            placeHolderUser1.setEnabled(false);
        } else {
            SelectUser.setSize(520, 53);
            placeHolderUser1.setVisible(false);
            placeHolderUser1.setEnabled(false);
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        if(jKeyField.getText().isEmpty()) {
            placeHolderUser2.setVisible(true);
            placeHolderUser2.setEnabled(false);
        } else {
            SelectKey.setSize(520, 53);
            placeHolderUser2.setVisible(false);
            placeHolderUser2.setEnabled(false);
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    public boolean finalizado(){
        return finalizado;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmprestimoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmprestimoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmprestimoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmprestimoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EmprestimoScreen dialog = new EmprestimoScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private boolean finalizado;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane SelectUser;
    private javax.swing.JScrollPane SelectKey;
    private javax.swing.JButton btnEmprestar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaOBS;
    private javax.swing.JTextField jUserField;
    private javax.swing.JTextField jKeyField;
    private javax.swing.JLabel placeHolderUser;
    private javax.swing.JLabel placeHolderUser1;
    private javax.swing.JLabel placeHolderUser2;
//    private javax.swing.JLabel txtUser;
//    private javax.swing.JLabel txtKey;


    private static List<Pessoa> pessoas;
    private static DefaultListModel<String> listModelPessoa;

    private static List<Chave> chaves;
    private static DefaultListModel<String> listModelChave;
    // End of variables declaration//GEN-END:variables
}
